//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
namespace Armage
{
	public class EnglishFeed : NameFeed
	{
		protected override void definePrefixes() {
			prefixes = new string[] { "gremlin", "sock", "shoe", "crabby", 
				"whale", "barista", "lime", "gopher", "beaver", "snookum", "puppy", "tropical", "dangerous",
				"seriously", "goofy", "graphic", "hoppy", "gokuu", "traumatic", "happy", "silly",
				"playful", "dingy", "mormo", "waffle", "pancake", "beef", "scrawny", "pretty", "docile",
				"onion", "ban", "yellow", "rice", "fake", 
				"taco", "pro", "bestest", "professor", "peppy", "utterly", "absolute", "darke", "gravy",
				"hot", "saucy", "gobs", "tribe", "butter", "ghost", "watery", "screwy", "staunch", "man",
				"jorb", "truck", "nu", "post", "pre", "modern", "freaky", "funky", "dog", "loser", "free"
			};
		}

		protected override void definePostfixes() {
			postfixes = new string[] { "roasta", "cats", "puppet", "monster", "pups", "tron", "spear", "stick", 
				"ban", "munche", "hobo", "hummus", "pigeon", "idiota", "zombie", "ogre", "prawns", "moof", 
				"artius", "prom", "lava", "arms", "beefe", "eiber", "llama", "goats", "timmy", "bob", "betos", "rambo",
				"popsicle", "rambo", "train", "carp", "potter", "bear", "beers", "drama", "sauce", "rocks", "granny",
				"tribe", "maxiumus", "grumps", "jammera", "drinks", "rebellion", "riot", "feet", "giraffe", "apple", "medicine",
				"painting", "sitter", "flashbacks", "slayer", "hamster", "bubbles", "ramen", "toaster", "dingy", "canoe", "lasers",
				"damage", "dramatic", "mob", "trapper", "shammy", "robot", "grammar", "artist", "emo",
				"artoria", "thumbs", "belly"
			};
		}

		protected override void defineInterchangeables() {
			interchangeables =  new Dictionary<string, string[]>();
			interchangeables["a"] = new string[] { "a", "a", "a", "a", "ai", "ai", "ai", "ay", "ay",
				"aye", "ae", "ae", "ae" };
			interchangeables["b"] = new string[] { "b", "b", "b", "b", "ba", "be", "bai", "by", "bi", "be", "bjo", 
				"bo" };
			interchangeables["c"] = new string[] { "c", "c", "c", "c", "k", "k", "k", "k", "kt",
				"ck", "ck",  "sk", "sck", 
				"q", "q", "x", "x", "xx", "xk", "cx", "cx" };
			interchangeables["d"] = new string[] { "d", "d", "d", "d",
				"do", "da", "de", "di", "dr" };
			interchangeables["e"] = new string[] { "e", "e", "e", "e", "ea", "ea", "ea",
				"eau", "eei", "eai", "eye", 
				"ey", "eu", "eio", "er", "et", "en", "em", 
				"ep", "eg", "ed", "es", "ess", "ex" };
			interchangeables["f"] = new string[] { "f", "f", "f", "f", "fl", "fe", "fa",
				"fy", "fu", "fo", "foo", "fi", "v", "v", "va" };
			interchangeables["g"] = new string[] { "g", "g", "g", "g", "j",
				"j", "ge", "gre", "ga", "gra", "gr", "gr", 
				"gi", "go", "gor", 
				"gl", "gl" };
			interchangeables["h"] = new string[] { "h", "h", "h", "h", "sh", "sh", "sh", 
				"hi", "ha", "ho", "hio", "hai", 
				"hou", "hre", "hnn", "hk" };
			interchangeables["i"] = new string[] { "i", "i", "i", "i", "ii", "ii", "ie", "ie", "io",
				"ia", "eye", "y", "y", "y" };
			interchangeables["j"] = new string[] { "j", "j", "j", "j", "ja", "ja", "jaa", "ji", "jo",
				"g", "g", "juu",
				"je", "jer", "jar", "jir", "je", "jel", "jah", "jv" };
			interchangeables["k"] = new string[] { "k", "k", "k", "k", "ck", "ck", "cc", "kk", "kt",
				"ka", "ka", "ke", "ke", "ko", "ki", "kii", 
				"kuu", "kui", "ker", "kar", "ky", "key", "kai", "kx" };
			interchangeables["l"] = new string[] { "l", "l", "l", "l", "ll", "ll", "ll", "la", "la",
				"le", "lo", "loo", "li", "lii", "ler", "lar", "lu" };
			interchangeables["m"] = new string[] { "m", "m", "m", "m", "n", "n", "mn", "mn", "mb",
				"mb", "mb", "hm", "hm", "mo", "ma", "me", "mi", 
				"mas", "mes", "mos" };
			interchangeables["n"] = new string[] { "n", "n", "n", "n", "m", "m", "mn", "mn",
				"ny", "ln", "in", "na", "ne", "ni", 
				"nas", "nos" };
			interchangeables["o"] = new string[] { "o", "o", "o", "o", "yo", "aio", "uo",
				"io", "ao", "oo", "uoo", "oy", "om", "omn", 
				"on", "or", "os", "oh" };
			interchangeables["p"] = new string[] { "p", "p", "p", "p", "b", "b",
				"b", "pu", "po", "pao", "pem", "pii", "pio", "pai", 
				"pra", "pru", "par", "par", "py", "py" };
			interchangeables["q"] = new string[] { "q", "q", "q", "q", "k", "k", "k", "k", "qc",
				"quc", "qac", "qy" };
			interchangeables["r"] = new string[] { "r", "r", "r", "r", "ra", "ri", "ro", "re",
				"ruu", "rau", "rie", 
				"rey", "ray", "rl", "rll", "rv", "rev", "ran", 
				"ras", "rz" };
			interchangeables["s"] = new string[] { "s", "s", "s", "s", "sh", "sh", "sh",
				"sp", "sx", "sx", "sw", "swa", "swe", 
				"sai", "say", "sii", "sa" };
			interchangeables["t"] = new string[] { "t", "t", "t", "t", "tt", "tt", "tt",
				"rt", "rt", "it", "it", "at", "ot", "to", 
				"tar", "tra", "tr", "tri", "ter" };
			interchangeables["u"] = new string[] { "u", "u", "u", "u", "uv", "uv", "uv",
				"ur", "uy", "uer", 
				"uf", "uj", "ul", "url", "uw", 
				"us", "uz", "ux" };
			interchangeables["v"] = new string[] { "v", "v", "v", "v", "uv", "uv", "uv", "wv", "wv",
				"vu", "vuu", 
				"ver", "var", "vrl", "vom", "van" };
			interchangeables["w"] = new string[] { "w", "w", "w", "w", "we", "wi", "wii", "wo", "yw", 
				"rw", "vw", "wz" };
			interchangeables["x"] = new string[] { "x", "x", "x", "x", "xy", "xyo", "xi", "xii", "xii",
				"xsa", "xas", "xs", "xz", "xss", "xss", "xt", "xte" };
			interchangeables["y"] = new string[] { "y", "y", "y", "y", "yv", "yve", "yuu", "yii",
				"yea", "ya", "yaa", "yi", "yer", "yr", "yt", "yh", 
				"yun", "yum", "yjo", "ylk", "yk", "yr", "yrs" };
			interchangeables["z"] = new string[] { "z", "z", "z", "z", "s", "s", "s", "sz", "szz",
				"szx", "sxi", "zxi", "zsx", "zx", "zo", "zi", "zii" };
		}
	}
}

